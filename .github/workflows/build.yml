name: Build Telemetry Analysis Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Rename old Python files to .old
      run: |
        Get-ChildItem -Path . -Filter *.py -Exclude telemetry_analysis_suite.py | 
        Where-Object { $_.Name -ne "telemetry_analysis_suite.py" } | 
        ForEach-Object { 
            $newName = $_.FullName + ".old"
            if (Test-Path $newName) { Remove-Item $newName -Force }
            Rename-Item -Path $_.FullName -NewName $newName 
        }
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Telemetry Analysis Suite with PyInstaller
      run: |
        pyinstaller --name="Telemetry Analysis Suite" --windowed --onedir --add-data="requirements.txt;." --add-data="data_organizer.py;." telemetry_analysis_suite.py
    
    - name: Create ZIP archive
      run: |
        mkdir -p dist/windows
        Compress-Archive -Path "dist\Telemetry Analysis Suite" -DestinationPath "dist\windows\Telemetry_Analysis_Suite_Windows.zip"
    
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: telemetry-analysis-suite-windows
        path: dist/windows/Telemetry_Analysis_Suite_Windows.zip
        retention-days: 7

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Telemetry Analysis Suite with PyInstaller (macOS)
      run: |
        pyinstaller --name="Telemetry Analysis Suite" --windowed --noconfirm --onefile --add-data="requirements.txt:." --add-data="data_organizer.py:." telemetry_analysis_suite.py
    
    - name: Create ZIP archive (macOS)
      run: |
        mkdir -p dist/macos
        cd "dist"
        zip -r "Telemetry_Analysis_Suite_macOS.zip" "Telemetry Analysis Suite.app"
        mv "Telemetry_Analysis_Suite_macOS.zip" "../dist/macos/"
        cd ..
    
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: telemetry-analysis-suite-macos
        path: dist/macos/Telemetry_Analysis_Suite_macOS.zip
        retention-days: 7

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write  # Required to create releases and upload assets
      packages: write  # Required if you're using GitHub Packages
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: telemetry-analysis-suite-windows
          path: windows
      
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: telemetry-analysis-suite-macos
          path: macos
      
      - name: Get current timestamp
        id: date
        run: |
          echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.date.outputs.timestamp }}
          release_name: "Release ${{ steps.date.outputs.date }} (${{ steps.date.outputs.timestamp }})"
          body: |
            Automated release created on ${{ steps.date.outputs.date }}
            
            ### Changes
            - Windows and macOS builds of the Telemetry Analysis Suite
          draft: false
          prerelease: false

      - name: Upload Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/Telemetry_Analysis_Suite_Windows.zip
          asset_name: Telemetry_Analysis_Suite_Windows.zip
          asset_content_type: application/zip

      - name: Upload macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/Telemetry_Analysis_Suite_macOS.zip
          asset_name: Telemetry_Analysis_Suite_macOS.zip
          asset_content_type: application/zip
